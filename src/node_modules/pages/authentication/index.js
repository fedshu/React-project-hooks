import React, {useState, useEffect} from 'react';
import {Link, Redirect} from 'react-router-dom';
import useFetch from 'hooks/useFetch';


const Authentication = props => {
   const isLogin = props.match.path === '/login';
   const pageTitle = isLogin ? 'Sing In' : 'Sing Up';
   const descriptionLink = isLogin ? '/register' : '/Login';
   const descriptionText = isLogin ? 'Need an account?' : 'Have an account?'
   const apiUrl = isLogin ? '/users/login' : '/users'
   const [email, setEmail] = useState('');
   const [password, setPassword] = useState('');
   const [username, setUsername] = useState('');
   const [isSuccessfullSubmit, setIsSuccessefullSubmit]  = useState(false);
   const [{isLoading, error, response}, doFetch] = useFetch(apiUrl);
   console.log('props', props);

   const handleSubmit = (e) => {
      e.preventDefault();

      const user = isLogin ? {email, password} : {email, password, username};
      doFetch({
         method: 'post',
         data: {
            user
         }
      })
      console.log('values', email, password)
   }

   
   useEffect(() => {
      if (!response) {
         return
      }
      localStorage.setItem('token', response.user.token)
      setIsSuccessefullSubmit(true);
   },[response])

   if (isSuccessfullSubmit) {
      return <Redirect to='/' />
   }

   return (
      <div className='auth-page'>
         <div className='container page'>
            <div className='row'>
               <div className='col-md-6 offset-md-3 col-xs-12'>
                  <h1 className='text-xs-center'>{pageTitle}</h1>
                  <p className='text-xs-center'>
                     <Link to={descriptionLink}>{descriptionText}</Link>
                  </p>
                  <form onSubmit={handleSubmit}>
                     <fieldset>
                        {!isLogin && (                        
                        <fieldset className='form-group'>
                           <input
                              type='text'
                              className='form-control form-control-lg'
                              placeholder='Username'
                              value={username}
                              onChange={e => setUsername(e.target.value)}
                           />
                        </fieldset>
                        )}
                        <fieldset className='form-group'>
                           <input
                              type='email'
                              className='form-control form-control-lg'
                              placeholder='email'
                              value={email}
                              onChange={e => setEmail(e.target.value)}
                           />
                        </fieldset>
                        <fieldset className='form-group'>
                           <input
                              type='Password'
                              className='form-control form-control-lg'
                              placeholder='Password'
                              value={password}
                              onChange={e => setPassword(e.target.value)}
                           />
                        </fieldset>
                        <button
                           className='btn btn-lg btn-primary pull-xs-right'
                           type='submit'
                           disabled={isLoading}
                        >
                           {pageTitle}
                        </button>
                     </fieldset>
                  </form>
               </div>
            </div>
         </div>
      </div>
   )
}

export default Authentication;